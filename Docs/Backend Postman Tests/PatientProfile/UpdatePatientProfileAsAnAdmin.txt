pm.test("Response status code is 200", function () {
    pm.response.to.have.status(200);
});


pm.test("Content-Type is application/json", function () {
    pm.expect(pm.response.headers.get("Content-Type")).to.include("application/json");
});


pm.test("Id, firstName, lastName, dateOfBirth, email, contactInformation, gender, emergencyContact, and medicalRecordNumber are present in the response", function () {
    const responseData = pm.response.json();
    
    pm.expect(responseData).to.have.property('id');
    pm.expect(responseData).to.have.property('firstName');
    pm.expect(responseData).to.have.property('lastName');
    pm.expect(responseData).to.have.property('dateOfBirth');
    pm.expect(responseData).to.have.property('email');
    pm.expect(responseData).to.have.property('contactInformation');
    pm.expect(responseData).to.have.property('gender');
    pm.expect(responseData).to.have.property('emergencyContact');
    pm.expect(responseData).to.have.property('medicalRecordNumber');
});

pm.test("First name is a string", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.firstName).to.be.a('string');
});
pm.test("Last name is a string", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.lastName).to.be.a('string');
});
pm.test("Email is a valid string", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.email).to.be.a('string').and.to.include('@').and.to.include('.');
});
pm.test("Contact information is a number that starts with 9", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.contactInformation).to.be.a('number').and.to.satisfy((contact) => {
        return contact.toString().startsWith('9');
    });
});


pm.test("Age is a non-negative integer", function () {
    const responseData = pm.response.json();
    
    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData.contactInformation).to.be.a('number');
    pm.expect(responseData.contactInformation).to.be.at.least(0);
});



pm.test("Gender is present in the response", function () {
  const responseData = pm.response.json();
  pm.expect(responseData).to.have.property('gender');
});



