pm.test("Response status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Content-Type is application/json", function () {
    pm.expect(pm.response.headers.get("Content-Type")).to.include("application/json");
});

pm.test("Required fields are present in the response", function () {
    const responseData = pm.response.json();

    pm.expect(responseData).to.have.property('firstName');
    pm.expect(responseData).to.have.property('lastName');
    pm.expect(responseData).to.have.property('specialization');
    pm.expect(responseData).to.have.property('email');
    pm.expect(responseData).to.have.property('phoneNumber');
});

pm.test("First name is a string", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.firstName).to.be.a('string');
});

pm.test("Last name is a string", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.lastName).to.be.a('string');
});


pm.test("Specialization is a valid string", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.specialization).to.be.a('string').and.to.have.lengthOf.at.least(1, "Specialization should not be empty");
});

pm.test("Email is a valid string", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.email).to.be.a('string').and.to.match(/\S+@\S+\.\S+/);
});

pm.test("Phone number is a valid 9-digit string", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.phoneNumber).to.be.a('string').and.to.match(/^9\d{8}$/, "Phone number should start with 9 and have 9 digits");
});
